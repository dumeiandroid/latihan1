/**
 * Menghitung nilai SW (Skalenwert) IQ berdasarkan usia dan RW (Rohwert).
 * @param {number} usia - Usia subjek.
 * @param {number} rw - Nilai Rohwert.
 * @returns {number | string} Nilai SW IQ atau pesan error jika tidak valid.
 */
function getSW_iq(usia, rw) {
    const data = {
        '14': [
            [171, 180, 134], [161, 170, 134], [151, 160, 134], [141, 150, 134],
            [131, 140, 134], [121, 130, 129], [111, 120, 124], [101, 110, 118],
            [91, 100, 113], [81, 90, 108], [71, 80, 103], [61, 70, 97],
            [51, 60, 92], [41, 50, 87], [31, 40, 82], [21, 30, 76],
            [11, 20, 71], [1, 10, 66]
        ],
        '15': [
            [171, 180, 134], [161, 170, 134], [151, 160, 134], [141, 150, 134],
            [131, 140, 129], [121, 130, 124], [111, 120, 119], [101, 110, 114],
            [91, 100, 109], [81, 90, 104], [71, 80, 99], [61, 70, 94],
            [51, 60, 89], [41, 50, 84], [31, 40, 79], [21, 30, 74],
            [11, 20, 69], [1, 10, 64]
        ],
        '16': [
            [171, 180, 134], [161, 170, 134], [151, 160, 134], [141, 150, 130],
            [131, 140, 125], [121, 130, 120], [111, 120, 115], [101, 110, 110],
            [91, 100, 106], [81, 90, 101], [71, 80, 96], [61, 70, 91],
            [51, 60, 87], [41, 50, 82], [31, 40, 77], [21, 30, 72],
            [11, 20, 68], [1, 10, 63]
        ],
        '17': [
            [171, 180, 138], [161, 170, 133], [151, 160, 129], [141, 150, 125],
            [131, 140, 120], [121, 130, 116], [111, 120, 112], [101, 110, 107],
            [91, 100, 103], [81, 90, 99], [71, 80, 94], [61, 70, 90],
            [51, 60, 86], [41, 50, 81], [31, 40, 77], [21, 30, 73],
            [11, 20, 68], [1, 10, 63]
        ],
        '18': [
            [171, 180, 135], [161, 170, 131], [151, 160, 127], [141, 150, 123],
            [131, 140, 118], [121, 130, 114], [111, 120, 110], [101, 110, 106],
            [91, 100, 102], [81, 90, 98], [71, 80, 93], [61, 70, 89],
            [51, 60, 85], [41, 50, 81], [31, 40, 77], [21, 30, 73],
            [11, 20, 68], [1, 10, 64]
        ],
        '19-20': [
            [171, 180, 136], [161, 170, 133], [151, 160, 129], [141, 150, 125],
            [131, 140, 121], [121, 130, 117], [111, 120, 113], [101, 110, 108],
            [91, 100, 104], [81, 90, 101], [71, 80, 97], [61, 70, 94],
            [51, 60, 90], [41, 50, 87], [31, 40, 83], [21, 30, 80],
            [11, 20, 77], [1, 10, 73]
        ],
        '21-25': [
            [171, 180, 132], [161, 170, 128], [151, 160, 124], [141, 150, 120],
            [131, 140, 117], [121, 130, 113], [111, 120, 109], [101, 110, 105],
            [91, 100, 101], [81, 90, 97], [71, 80, 93], [61, 70, 90],
            [51, 60, 86], [41, 50, 82], [31, 40, 78], [21, 30, 74],
            [11, 20, 70], [1, 10, 67]
        ],
        '26-30': [
            [171, 180, 133], [161, 170, 129], [151, 160, 125], [141, 150, 121],
            [131, 140, 117], [121, 130, 113], [111, 120, 110], [101, 110, 106],
            [91, 100, 102], [81, 90, 98], [71, 80, 94], [61, 70, 90],
            [51, 60, 87], [41, 50, 84], [31, 40, 79], [21, 30, 75],
            [11, 20, 71], [1, 10, 67]
        ],
        '31-35': [
            [171, 180, 133], [161, 170, 129], [151, 160, 125], [141, 150, 121],
            [131, 140, 117], [121, 130, 113], [111, 120, 110], [101, 110, 106],
            [91, 100, 102], [81, 90, 98], [71, 80, 94], [61, 70, 90],
            [51, 60, 87], [41, 50, 84], [31, 40, 79], [21, 30, 75],
            [11, 20, 71], [1, 10, 67]
        ],
        '36-40': [
            [171, 180, 135], [161, 170, 131], [151, 160, 127], [141, 150, 123],
            [131, 140, 119], [121, 130, 115], [111, 120, 111], [101, 110, 107],
            [91, 100, 103], [81, 90, 99], [71, 80, 95], [61, 70, 91],
            [51, 60, 88], [41, 50, 84], [31, 40, 80], [21, 30, 76],
            [11, 20, 72], [1, 10, 68]
        ],
        '41-45': [
            [171, 180, 135], [161, 170, 131], [151, 160, 127], [141, 150, 123],
            [131, 140, 119], [121, 130, 115], [111, 120, 111], [101, 110, 107],
            [91, 100, 103], [81, 90, 99], [71, 80, 95], [61, 70, 91],
            [51, 60, 88], [41, 50, 84], [31, 40, 80], [21, 30, 76],
            [11, 20, 72], [1, 10, 68]
        ],
        '46-50': [
            [171, 180, 135], [161, 170, 131], [151, 160, 127], [141, 150, 123],
            [131, 140, 119], [121, 130, 115], [111, 120, 111], [101, 110, 107],
            [91, 100, 103], [81, 90, 99], [71, 80, 95], [61, 70, 91],
            [51, 60, 88], [41, 50, 84], [31, 40, 80], [21, 30, 76],
            [11, 20, 72], [1, 10, 68]
        ],
        '51-55': [
            [171, 180, 135], [161, 170, 131], [151, 160, 127], [141, 150, 123],
            [131, 140, 119], [121, 130, 115], [111, 120, 111], [101, 110, 107],
            [91, 100, 103], [81, 90, 99], [71, 80, 95], [61, 70, 91],
            [51, 60, 88], [41, 50, 84], [31, 40, 80], [21, 30, 76],
            [11, 20, 72], [1, 10, 68]
        ]
    };

    for (const key in data) {
        let match = false;
        if (key.includes('-')) {
            const [start, end] = key.split('-').map(Number);
            if (usia >= start && usia <= end) {
                match = true;
            }
        } else if (Number(key) === usia) {
            match = true;
        }

        if (match) {
            const ranges = data[key];
            for (const range of ranges) {
                if (rw >= range[0] && rw <= range[1]) {
                    return range[2];
                }
            }
        }
    }

    return "Usia atau RW tidak valid";
}

// Contoh penggunaan:
// let usia = 19;
// let rw = 173;
// const sw = getSW_iq(usia, rw);
// console.log(`SW untuk usia ${usia} dan RW ${rw} adalah: ${sw}`);
